name: Test Upgrade Environment
run-name: Creating ${{ github.event.inputs.deployment_name }} by @${{ github.actor }}

on:
  # Ability to execute on demand
  workflow_dispatch:
    inputs:
      deployment_name:
        type: string
        description: |
          Name with letters, numbers, hyphens; start with a letter. Max 20 chars. e.g., 'my-env-123'
        required: true
      elk-stack-version:
        required: true
        description: "Stack version: For released/BC version use 8.x.y, for SNAPSHOT use 8.x.y-SNAPSHOT"
        default: "8.11.0"
      docker-image-override:
        required: false
        description: "Provide the full Docker image path to override the default image (e.g. for testing BC/SNAPSHOT)"
env:
  PREVIOUS_VERSION: ""

jobs:
  init:
    runs-on: ubuntu-20.04
    steps:
      - name: Set Previous Version
        id: set-previous-version
        run: |
          VERSION="${{ github.event.inputs.elk-stack-version }}"
          
          # Extract the major and minor versions
          MAJOR_VERSION=$(echo $VERSION | cut -d'.' -f1)
          MINOR_VERSION=$(echo $VERSION | cut -d'.' -f2)
          
          # Calculate the previous version (assuming it's always X.(Y-1))
          PREVIOUS_VERSION="$MAJOR_VERSION.$((MINOR_VERSION - 1))"
          
          echo "PREVIOUS_VERSION=$PREVIOUS_VERSION" >> $GITHUB_ENV
  deploy:
    uses: ./.github/workflows/test-job.yml
    needs: init
    with:
      deployment_name: ${{ github.event.inputs.deployment_name }}
      ec-api-key: "sdfsdf"
      version: ${{ env.PREVIOUS_VERSION }}
  upgrade:
    runs-on: ubuntu-20.04
    needs: deploy
    steps:
      - id: set-vars
        run: echo ${{ needs.deploy.outputs.ec-key }} ${{ needs.deploy.outputs.public-key }}
